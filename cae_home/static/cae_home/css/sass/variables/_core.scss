
//=======================//
//==== Variables CSS ====//
//=======================//

// Declares variables that are universally used in other .scss files.


// To reference this outside of the CAE_Home app, use:
// @import '../../../../../../../cae_home/static/cae_home/css/sass/_variables';
//
// On the off chance that you need additional variables specific to a given app:
//  * Create a new "_variables" in that app's "css/sass" folder.
//  * Reference this file from the app-specific variables file.
//  * From then on, access both by importing the app-specific variables file in
//    all further app-specific sass files.


// Import statements.
@import '_colors.scss';
@import '_element_groups';
@import '_font_sizing';
@import '_mixins';
@import '_screen_sizing';


//================================================================================//
//==================================== Themes ====================================//
//================================================================================//

// Various themes used by the site.
// Established within the "$theme-colors" nested dictionaries.
// Accessed by theme functions.

// Note:
//
//  Primary - Tends to refer to styles used for main elements, such as header and
//      footer.
//
//  Content - Tends to refer to styles used within the .main-content block. This
//      is generally where actual page info is displayed.
//
//      For clarification, the 'text' value within the text block refers to
//      the color of standard text within the .main-content element.
//
//      Then the various 'content' stylings tend to refer to text within
//      elements such as panels, etc.
//
//  Status - Various 'status' stylings, such as for panels, buttons, etc.
//      Comes in flavors of:
//          * default (No class provided) - Generally grey/unfilled
//          * primary - Generally resembles header colors
//          * secondary - Optional secondary colors. Should mimic primary colors if not present
//          * info - Blue colored
//          * success - Green colored
//          * warn/warning - Yellow/Orange colored
//          * error/danger - Red colored
//


// Themes themselves are defined in the files below.
@import 'themes/_cae';

@import 'themes/_wmu';

@import 'themes/bootstrap/_grey';
@import 'themes/bootstrap/_green';
@import 'themes/bootstrap/_purple';
@import 'themes/bootstrap/_violet';

@import 'themes/dark/_blue';
@import 'themes/dark/_grey';
@import 'themes/dark/_red';

@import 'themes/light/_blue';
@import 'themes/light/_grey';
@import 'themes/light/_yellow';


//================================//
//==== START Theme Dict Block ====//
//================================//

$theme-colors: (

    'wmu': $theme-wmu,

    'cae': $theme-cae,

    'bootstrap-grey': $theme-bootstrap-grey,
    'bootstrap-green': $theme-bootstrap-green,
    'bootstrap-purple': $theme-bootstrap-purple,
    'bootstrap-violet': $theme-bootstrap-violet,

    'light-blue': $theme-light-blue,
    'light-grey': $theme-light-grey,
    'light-yellow': $theme-light-yellow,

    'dark-blue': $theme-dark-blue,
    'dark-grey': $theme-dark-grey,
    'dark-red': $theme-dark-red,
);


//==============================//
//==== End Theme Dict Block ====//
//==============================//


//=====================================//
//==== START Theme Functions Block ====//
//=====================================//

//**
// * Get background style.
// */
@function theme-background($theme, $style) {
    @return map-get(map-get(map-get($theme-colors, $theme), 'background'), $style);
}

//**
// * Get theme text style.
// */
@function theme-text($theme, $style) {
    @return map-get(map-get(map-get($theme-colors, $theme), 'text'), $style);
}

//**
// * Get dict of all of theme's statuses.
// */
@function theme-status-dict($theme) {
    @return map-get(map-get($theme-colors, $theme), 'status');
}

/**
 * Get dict of a specific theme status.
 */
@function theme-status-sub-dict($theme, $status) {
    @return map-get(map-get(map-get($theme-colors, $theme), 'status'), $status);
}

/**
 * Get theme status style.
 */
@function theme-status($theme, $status, $style) {
    @return map-get(map-get(map-get(map-get($theme-colors, $theme), 'status'), $status), $style);
}

//===================================//
//==== End Theme Functions Block ====//
//===================================//


//==================================//
//==== START Theme Append Block ====//
//==================================//

@each $theme, $theme-dict in $theme-colors {

    // Make 'warning' theme which is copy of 'warn'.
    /*@debug map-merge( theme-status-dict($theme), ('warning': theme-status-sub-dict($theme, warn)) );*/

    // Make 'danger' theme which is copy of 'error'.
    /*@debug map-merge( theme-status-dict($theme), ('danger': theme-status-sub-dict($theme, error)) );*/

    /*@debug theme-status-dict($theme);*/
    /*@debug theme-status-sub-dict($theme, 'error');*/
    /*@debug map-merge( theme-status-dict($theme), ('danger': theme-status-sub-dict($theme, 'error')) );*/

    /*theme-status-dict($theme):  map-merge( theme-status-dict($theme), ('danger': theme-status-sub-dict($theme, 'error')) );*/
    /*@debug $test;*/
    /*@debug theme-status-dict($theme);*/
}

//================================//
//==== End Theme Append Block ====//
//================================//
