
//=============================//
//==== General Content CSS ====//
//=============================//

// Essentially, any "content" that's rendered within the <main> DOM element
// should be styled here.

// Note: Content specific to sub-projects or sub-apps should probably be defined
// within that sub-project or sub-app.
// This file is meant for general content values that apply to the all projects,
// such as overall table or form stylings, and similar things.

// Import statements
@import '_variables';
@import '_mixins';


//================================================================================//
//================================= Positioning ==================================//
//================================== Includes: ===================================//
//================================================================================//
// position, top, right, bottom, left, z-index, display, float                    //
//                                                                                //
// grid-template-columns, grid-template-rows, grid-template-areas, grid-template, //
// grid-gap, place-items, grid, grid-column, grid-row, grid-area, place-self,     //
//                                                                                //
// flex-direction, flex-wrap, justify-content, align-items, align-content, order, //
// flex-grow, flex-shrink, flex-basis, flex, align-self,                          //
//                                                                                //
// width, height, max-width, max-height, min-width, min-height,                   //
// padding, padding-top, padding-right, padding-bottom, padding-left,             //
// margin, margin-top, margin-right, margin-bottom, margin-left,                  //
//                                                                                //
// margin-collapse, margin-top-collapse, margin-right-collapse,                   //
// margin-bottom-collapse, margin-left-collapse,                                  //
//                                                                                //
// overflow, overflow-x, overflow-y, clip, clear                                  //
//================================================================================//

//=====================================//
//==== START Generic Element Block ====//
//=====================================//

#content {

    padding-bottom: 10px;

    ul {
        padding-left: 20px
    }

    table {
        margin-right: auto;
        margin-left: auto;
    }

    td {
        padding-top: 5px;
        padding-right: 8px;
        padding-bottom: 5px;
        padding-left: 8px;
    }
}

//=====================================//
//===== END Generic Element Block =====//
//=====================================//


//===================================//
//==== START Generic Class Block ====//
//===================================//

#content {

    // Hide on print viewing.
    .display-only-web {
        @media only print {
            display: none !important;
        }
    }

    // Hide on web viewing.
    .display-only-print {
        @media only screen {
            display: none !important;
        }
    }

    // Attempt to center as much as possible.
    .center {
        @include flex-direction(center);
        @include align-items(center);
        text-align: center;
    }

    // Warning for javascript requirement.
    .javascript-warn {
        margin-right: auto;
        margin-top: 25px;
        margin-left: auto;
        margin-bottom: 25px;
    }
}

.hidden {
    display: none !important;
}

.fade-out {
    padding: 0 !important;
    margin: 0 !important;

    * {
        padding: 0 !important;
        margin: 0 !important;
    }
}

//=====================================//
//===== END Generic Class Block =======//
//=====================================//


//============================//
//==== START Button Block ====//
//============================//

button, a.button {
    display: inline-block;
    padding-top: 6px;
    padding-right: 12px;
    padding-bottom: 6px;
    padding-left: 12px;
    margin: 2px;
}

//============================//
//===== END Button Block =====//
//============================//


//===========================//
//==== START Alert Block ====//
//===========================//

.alert {
    @include display-flex;
    @include flex-direction(row);
    @include justify-content(space-between);
    @include align-items(center);

    padding-top: 6px;
    padding-right: 12px;
    padding-bottom: 6px;
    padding-left: 12px;

    a:not(.button) {
        padding-top: 5px;
        padding-right: 10px;
        padding-bottom: 5px;
        padding-left: 10px;
    }

    p > a:not(.button) {
        padding-top: 0;
        padding-right: 0;
        padding-bottom: 0;
        padding-left: 0;
    }
}

//===========================//
//===== END Alert Block =====//
//===========================//


//===========================//
//==== START Panel Block ====//
//===========================//

div.panel {
    position: relative;

    margin-top: 10px;
    margin-bottom: 10px;

    a:not(.button) {
        padding-top: 5px;
        padding-right: 10px;
        padding-bottom: 5px;
        padding-left: 10px;
    }

    p > a:not(.button) {
        padding-top: 0;
        padding-right: 0;
        padding-bottom: 0;
        padding-left: 0;
    }

    > .header {
        @include display-flex;
        @include flex-direction(row);
        @include justify-content(space-between);
        @include align-items(center);

        padding: 10px;

        > h1, h2, h3, h4, h5, h6 {
            padding-top: 0;
        }
    }

    > .content {
        padding: 10px;
    }

    > div.panel {
        margin: 15px;
    }

    > .footer {
        @include display-flex;
        @include flex-direction(row);
        @include justify-content(space-between);
        @include align-items(center);

        padding: 10px;
    }
}

#content > div.panel {
    margin-top: 20px;
    margin-bottom: 20px;
}

//===========================//
//===== END Panel Block =====//
//===========================//


//====================================//
//==== START Status Message Block ====//
//====================================//

#status-message-container {
    position: relative;

    @include display-flex;
    @include flex-direction(column);
    @include justify-content(center);
    @include align-items(center);

    padding: 0 !important;

    a {
        padding-top: 5px;
        padding-right: 10px;
        padding-bottom: 5px;
        padding-left: 10px;
    }

    .message {
        position: relative;

        @include display-flex;
        @include flex-direction(row);
        @include justify-content(center);
        @include align-items(center);

        width: 100%;
        padding: 10px;

        > p:first-child {
            @include display-flex;
            @include flex-direction(row);
            @include justify-content(space-between);
            @include align-items(center);

            @include flex(1);
        }

        .exit {
            position: relative;
            right: 0;

            padding-top: 3px;
            padding-right: 8px;
            padding-bottom: 3px;
            padding-left: 8px;
            margin-right: 0.5%;
            margin-left: 0.5%;
        }
    }
}

//====================================//
//===== END Status Message Block =====//
//====================================//


//=================================//
//==== START Content Bar Block ====//
//=================================//

#content-bar-left, #content-bar-right {
    position: absolute;

    @include display-flex;
    @include flex-direction(row);

    min-width: 100%;
    min-height: 100%;

    > .bar-nav {
        padding-top: 15px;
    }

    > .bar-content {
        min-height: 100%;
        padding: 5px;
    }
}

#content-bar-left {
    left: 0;

    > .bar-nav {
        left: 0;
        order: 1;
    }
}

#content-bar-right {
    right: 0;

    @include justify-content(flex-end);

    > .bar-nav {
        right: 0;
    }
}

.arrow-right:hover, .arrow-left:hover {
    background-color: white;
}

//===============================//
//==== End Content Bar Block ====//
//===============================//


//================================================================================//
//================================== Typography ==================================//
//================================== Includes: ===================================//
//================================================================================//
// font, font-family, font-size, font-smoothing, osx-font-smoothing, font-style,  //
// font-weight,                                                                   //
//                                                                                //
// hyphens, src, line-height, letter-spacing, word-spacing, color, text-align,    //
// text-decoration, text-indent, text-overflow, text-rendering, text-size-adjust, //
// text-shadow, text-transform,                                                   //
//                                                                                //
// word-break, word-wrap, white-space                                             //
//================================================================================//

//=====================================//
//==== START Generic Element Block ====//
//=====================================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        a {
            color: theme-text($theme, 'link');
        }

    }
  }

}

//=====================================//
//===== END Generic Element Block =====//
//=====================================//


//===================================//
//==== START Generic Class Block ====//
//===================================//

#content {

    .javascript-warn {
        font-weight: bold;

        text-align: center;
    }
}

.fade-out {
    * {
        font-size: 0px;
    }
}

//===================================//
//===== END Generic Class Block =====//
//===================================//


//============================//
//==== START Button Block ====//
//============================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        button, a.button {
            color: theme-text($theme, 'primary-accent');
            font-size: 1rem;
            text-decoration: none;
        }

        button:hover, a.button:hover {
            color: theme-text($theme, 'primary');
        }

    }
  }

}

//============================//
//===== END Button Block =====//
//============================//


//===========================//
//==== START Alert Block ====//
//===========================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        .alert {
            color: theme-text($theme, 'primary-accent');

            a {
                font-weight: bold;
                color: theme-status($theme, 'default', 'text');
                text-decoration: none;
            }
        }

        .alert:hover {
            color: theme-status($theme, 'default', 'text');
        }

        .alert.info {
            a {
                color: theme-status($theme, 'info', 'text');
            }
        }

        .alert.success {
            a {
                color: theme-status($theme, 'success', 'text');
            }
        }

        .alert.warning {
            a {
                color: theme-status($theme, 'warn', 'text');
            }
        }

        .alert.error, .alert.danger {
            a {
                color: theme-status($theme, 'error', 'text');
            }
        }

    }
  }

}

//===========================//
//===== END Alert Block =====//
//===========================//


//===========================//
//==== START Panel Block ====//
//===========================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        div.panel {
            a.button, button {
                font-weight: normal;
            }

            a:not(.button) {
                font-weight: bold;
                color: theme-status($theme, 'default', 'text');
                text-decoration: none;
            }

            > .header {
                font-size: 110%;
                font-weight: bold;
            }
        }

        div.panel.info {
            a:not(.button) {
                color: theme-status($theme, 'info', 'text');
            }
        }

        div.panel.success {
            a:not(.button) {
                color: theme-status($theme, 'success', 'text');
            }
        }

        div.panel.warning {
            a:not(.button) {
                color: theme-status($theme, 'warn', 'text');
            }
        }

        div.panel.error, div.panel.danger {
            a:not(.button) {
                color: theme-status($theme, 'error', 'text');
            }
        }

    }
  }

}

//===========================//
//===== END Panel Block =====//
//===========================//


//====================================//
//==== START Status Message Block ====//
//====================================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        #status-message-container {

            .message {
                a {
                    font-weight: bold;
                    color: theme-status($theme, 'default', 'text');
                    text-decoration: none;
                }

                .exit {
                    font-weight: bold;
                    color: theme-status($theme, 'default', 'text');
                }

                .exit:hover {
                    font-weight: bold;
                    color: theme-text($theme, 'primary') !important;
                }
            }

            .message.info {
                a {
                    color: theme-status($theme, 'info', 'text');
                }

                .exit {
                    color: theme-status($theme, 'info', 'text');
                }
            }

            .message.success {
                a {
                    color: theme-status($theme, 'success', 'text');
                }

                .exit {
                    color: theme-status($theme, 'success', 'text');
                }
            }

            .message.warning {
                a {
                    color: theme-status($theme, 'warn', 'text');
                }

                .exit {
                    color: theme-status($theme, 'warn', 'text');
                }
            }

            .message.error, .message.danger {
                a {
                    color: theme-status($theme, 'error', 'text');
                }

                .exit {
                    color: theme-status($theme, 'error', 'text');
                }
            }
        }

    }
  }

}

//====================================//
//===== END Status Message Block =====//
//====================================//


//=================================//
//==== START Content Bar Block ====//
//=================================//

#content-bar-left, #content-bar-right {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        > .bar-nav p {
            font-size: 150%;
            color: theme-background($theme, 'primary');
        }

        > .bar-nav p:hover {
            color: theme-text($theme, 'primary');
        }

    }
  }

}

//===============================//
//==== End Content Bar Block ====//
//===============================//


//================================================================================//
//==================================== Visual ====================================//
//================================== Includes: ===================================//
//================================================================================//
// vertical-align,                                                                //
//                                                                                //
// list-style, list-style-type, list-style-position, list-style-image,            //
//                                                                                //
// pointer-events, cursor,                                                        //
//                                                                                //
// background, background-attatchment, background-color, background-image,        //
// background-position, background-repeat, background-size,                       //
//                                                                                //
// border, border-collapse, border-top, border-right, border-bottom, border-left, //
// border-color, border-image, border-top-color, border-right-color,              //
// border-bottom-color, border-left-color, border-spacing, border-style,          //
// border-top-style, border-right-style, border-bottom-style, border-left-style,  //
// border-width, border-top-width, border-right-width, border-bottom-width,       //
// border-left-width,                                                             //
//                                                                                //
// border-radius, border-top-right-radius, border-bottom-right-radius,            //
// border-bottom-left-radius, border-top-left-radius, border-radius-topright,     //
// border-radius-bottomright, border-radius-bottomleft, border-radius-topleft,    //
//                                                                                //
// content, quotes, outline, outline-offset, opacity, filter, visibility, size,   //
// zoom                                                                           //
//================================================================================//

//=====================================//
//==== START Generic Element Block ====//
//=====================================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        table {
            border: 1px solid theme-background($theme, 'primary');
            border-collapse: collapse;
        }

        td {
            border: 1px solid theme-background($theme, 'border');
        }

        hr {
            border-style: solid;
            border-color: theme-background($theme, 'border');
        }

    }
  }

}

//=====================================//
//===== END Generic Element Block =====//
//=====================================//


//===================================//
//==== START Generic Class Block ====//
//===================================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        .hover-highlight:hover {
            background-color: theme-background($theme, 'primary');
        }

        .javascript-warn {
            background-color: theme-status($theme, 'error', 'primary');
        }

        .fade-in {
            opacity: 1;
            visibility: visible;
        }

        .fade-out {
            opacity: 0;
            visibility: hidden;
        }

    }
  }

}

//===================================//
//===== END Generic Class Block =====//
//===================================//


//============================//
//==== START Button Block ====//
//============================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        button, a.button {
            background-color: theme-status($theme, 'default', 'primary');
            border: 1px solid theme-status($theme, 'default', 'border');

            border-radius: 5px;
        }

        button:hover, a.button:hover {
            background-color: theme-status($theme, 'default', 'border');
        }

        button.info, a.button.info, .info button, .info a.button {
            background-color: theme-status($theme, 'info', 'primary');
            border: 1px solid theme-status($theme, 'info', 'border');
        }

        button.info:hover, a.button.info:hover, .info button:hover, .info a.button:hover {
            background-color: theme-status($theme, 'info', 'border');
        }

        button.success, a.button.success, .success button, .success a.button {
            background-color: theme-status($theme, 'success', 'primary');
            border: 1px solid theme-status($theme, 'success', 'border');
        }

        button.success:hover, a.button.success:hover, .success button:hover, .success a.button:hover {
            background-color: theme-status($theme, 'success', 'border');
        }

        button.warning, a.button.warning, .warning button, .warning a.button {
            background-color: theme-status($theme, 'warn', 'primary');
            border: 1px solid theme-status($theme, 'warn', 'border');
        }

        button.warning:hover, a.button.warning:hover, .warning button:hover, .warning a.button:hover {
            background-color: theme-status($theme, 'warn', 'border');
        }

        button.error, a.button.error, .error button, .error a.button,
        button.danger, .button.danger, .danger button, .danger a.button {
            background-color: theme-status($theme, 'error', 'primary');
            border: 1px solid theme-status($theme, 'error', 'border');
        }

        button.error:hover, a.button.error:hover, .error button:hover, .error a.button:hover,
        button.danger:hover, .button.danger:hover, .danger button:hover, .danger a.button:hover {
            background-color: theme-status($theme, 'error', 'border');
        }

    }
  }

}

//============================//
//===== END Button Block =====//
//============================//


//===========================//
//==== START Alert Block ====//
//===========================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        .alert {
            background-color: theme-status($theme, 'default', 'primary');
            border: 1px solid theme-status($theme, 'default', 'border');

            a:not(.button) {
                border-radius: 5em
            }

            a:hover:not(.button) {
                background-color: theme-status($theme, 'default', 'primary');
            }
        }

        .alert:hover {
            background-color: theme-status($theme, 'default', 'highlight');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'default', 'primary');
            }
        }

        .alert.info {
            background-color: theme-status($theme, 'info', 'primary');
            border: 1px solid theme-status($theme, 'info', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'info', 'primary');
            }
        }

        .alert.info:hover {
            background-color: theme-status($theme, 'info', 'highlight');
        }

        .alert.success {
            background-color: theme-status($theme, 'success', 'primary');
            border: 1px solid theme-status($theme, 'success', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'success', 'primary');
            }
        }

        .alert.success:hover {
            background-color: theme-status($theme, 'success', 'highlight');
        }

        .alert.warning {
            background-color: theme-status($theme, 'warn', 'primary');
            border: 1px solid theme-status($theme, 'warn', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'warn', 'primary');
            }
        }

        .alert.warning:hover {
            background-color: theme-status($theme, 'warn', 'highlight');
        }

        .alert.error, .alert.danger {
            background-color: theme-status($theme, 'error', 'primary');
            border: 1px solid theme-status($theme, 'error', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'error', 'primary');
            }
        }

        .alert.error:hover, .alert.danger:hover {
            background-color: theme-status($theme, 'error', 'highlight');
        }

    }
  }

}

//===========================//
//===== END Alert Block =====//
//===========================//


//===========================//
//==== START Panel Block ====//
//===========================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        div.panel {
            background-color: theme-status($theme, 'default', 'primary');
            border: 1px solid theme-status($theme, 'default', 'border');

            a:not(.button) {
                border-radius: 5em
            }

            a:hover:not(.button) {
                background-color: theme-status($theme, 'default', 'primary');
            }

            > .header {
                border-bottom: 1px solid theme-status($theme, 'default', 'border');
            }

            > .content {
                background-color: theme-background($theme, 'content');
            }

            > .footer {
                border-top: 1px solid theme-status($theme, 'default', 'border');
            }
        }

        div.panel:hover {
            background-color: theme-status($theme, 'default', 'highlight');
        }

        div.panel.info {
            background-color: theme-status($theme, 'info', 'primary');
            border: 1px solid theme-status($theme, 'info', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'info', 'primary');
            }

            > .header {
                border-bottom: 1px solid theme-status($theme, 'info', 'border');
            }

            > .footer {
                border-top: 1px solid theme-status($theme, 'info', 'border');
            }
        }

        div.panel.info:hover {
            background-color: theme-status($theme, 'info', 'highlight');
        }

        div.panel.success {
            background-color: theme-status($theme, 'success', 'primary');
            border: 1px solid theme-status($theme, 'success', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'success', 'primary');
            }

            > .header {
                border-bottom: 1px solid theme-status($theme, 'success', 'border');
            }

            > .footer {
                border-top: 1px solid theme-status($theme, 'success', 'border');
            }
        }

        div.panel.success:hover {
            background-color: theme-status($theme, 'success', 'highlight');
        }

        div.panel.warning {
            background-color: theme-status($theme, 'warn', 'primary');
            border: 1px solid theme-status($theme, 'warn', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'warn', 'primary');
            }

            > .header {
                border-bottom: 1px solid theme-status($theme, 'warn', 'border');
            }

            > .footer {
                border-top: 1px solid theme-status($theme, 'warn', 'border');
            }
        }

        div.panel.warning:hover {
            background-color: theme-status($theme, 'warn', 'highlight');
        }

        div.panel.error, .panel.danger {
            background-color: theme-status($theme, 'error', 'primary');
            border: 1px solid theme-status($theme, 'error', 'border');

            a:hover:not(.button) {
                background-color: theme-status($theme, 'error', 'primary');
            }

            > .header {
                border-bottom: 1px solid theme-status($theme, 'error', 'border');
            }

            > .footer {
                border-top: 1px solid theme-status($theme, 'error', 'border');
            }
        }

        div.panel.error:hover, .panel.danger:hover {
            background-color: theme-status($theme, 'error', 'highlight');
        }

    }
  }

}

//===========================//
//===== END Panel Block =====//
//===========================//


//====================================//
//==== START Status Message Block ====//
//====================================//

#content {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        #status-message-container {

            li {
                list-style-type: none;
            }

            a, .exit {
                border-radius: 5em;
            }

            .message {
                background-color: theme-status($theme, 'default', 'primary');
                border: 1px solid theme-status($theme, 'default', 'border');

                a:hover, .exit:hover {
                    background-color: theme-status($theme, 'default', 'primary');
                }
            }

            .message:last-child {
                border-bottom-right-radius: 5px;
                border-bottom-left-radius: 5px;
            }

            .message:hover {
                background-color: theme-status($theme, 'default', 'highlight');
            }

            .message.info {
                background-color: theme-status($theme, 'info', 'primary');
                border: 1px solid theme-status($theme, 'info', 'border');

                a:hover, .exit:hover {
                    background-color: theme-status($theme, 'info', 'primary');
                }
            }

            .message.info:hover {
                background-color: theme-status($theme, 'info', 'highlight');
            }

            .message.success {
                background-color: theme-status($theme, 'success', 'primary');
                border: 1px solid theme-status($theme, 'success', 'border');

                a:hover, .exit:hover {
                    background-color: theme-status($theme, 'success', 'primary');
                }
            }

            .message.success:hover {
                background-color: theme-status($theme, 'success', 'highlight');
            }

            .message.warning {
                background-color: theme-status($theme, 'warn', 'primary');
                border: 1px solid theme-status($theme, 'warn', 'border');

                a:hover, .exit:hover {
                    background-color: theme-status($theme, 'warn', 'primary');
                }
            }

            .message.warning:hover {
                background-color: theme-status($theme, 'warn', 'highlight');
            }

            .message.error, .message.danger {
                background-color: theme-status($theme, 'error', 'primary');
                border: 1px solid theme-status($theme, 'error', 'border');

                a:hover, .exit:hover {
                    background-color: theme-status($theme, 'error', 'primary');
                }
            }

            .message.error:hover, .message.danger:hover {
                background-color: theme-status($theme, 'error', 'highlight');
            }
        }

    }
  }

}

//====================================//
//===== END Status Message Block =====//
//====================================//


//=================================//
//==== START Content Bar Block ====//
//=================================//

#content-bar-left, #content-bar-right {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        > .bar-content {
            background-color: theme-background($theme, 'primary');
            border-right: 1px solid theme-background($theme, 'border');
            border-left: 1px solid theme-background($theme, 'border');
        }
    }
  }
}

//===============================//
//==== End Content Bar Block ====//
//===============================//


//================================================================================//
//==================================== Other =====================================//
//================================== Includes: ===================================//
//================================================================================//
// transform, box-align, box-flex, box-orient, box-pack, box-shadow, box-sizing,  //
// table-layout,                                                                  //
//                                                                                //
// animation, animation-delay, animation-duration, animation-iteration-count,     //
// animation-name, animation-play-state, animation-timing-function,               //
// animation-fill-mode,                                                           //
//                                                                                //
// transition, transition-delay, transition-duration, transition-property,        //
// transition-timing-function,                                                    //
//                                                                                //
// background-clip, backface-visibility, resize, appearance, user-select,         //
// interpolation-mode, direction, marks, page, set-link-source, unicode-bidi,     //
// speak                                                                          //
//================================================================================//

//===================================//
//==== START Generic Class Block ====//
//===================================//

#content {

    .hover-highlight:hover {
        cursor: pointer;
    }
}

.fade-in {
    @include transition(opacity 1s linear, visibility 0s 1s);
}

.fade-out {
    @include transition(padding 0.9s, margin 0.9s, font-size 0.9s, opacity 0.9s linear, visibility 0s 0.9s);

    * {
        @include transition(padding 0.9s, margin 0.9s, font-size 0.9s);
    }
}

//===================================//
//===== END Generic Class Block =====//
//===================================//


//============================//
//==== START Button Block ====//
//============================//

button, a.button {
    cursor: pointer;
    @include transition(color 0.5s, background-color 0.5s);
}

//============================//
//===== END Button Block =====//
//============================//


//===========================//
//==== START Alert Block ====//
//===========================//

.alert {
    @include transition(color 0.5s, background-color 0.5s);

    a {
        @include transition(background-color 0.5s);
    }
}

//===========================//
//===== END Alert Block =====//
//===========================//


//===========================//
//==== START Panel Block ====//
//===========================//

div.panel {

  @each $theme, $theme-dict in $theme-colors {
    .theme-#{$theme} & {

        box-shadow: 1px 1px 5px theme-background($theme, 'border');

    }
  }

    @include transition(background-color 0.5s);

    a {
        @include transition(background-color 0.5s);
    }
}

//===========================//
//===== END Panel Block =====//
//===========================//


//====================================//
//==== START Status Message Block ====//
//====================================//

#status-message-container {

    .message {
        box-sizing: border-box;

        @include transition(padding 0.9s, margin 0.9s, font-size 0.9s, background-color 0.5s, border-radius 0.5s, opacity 0.9s linear, visibility 0s 0.9s);

        a {
            @include transition(background-color 0.5s);
        }

        .exit {
            @include transition(background-color 0.5s, color 0.5s);
            cursor: pointer;
        }
    }
}

//====================================//
//===== END Status Message Block =====//
//====================================//


//=================================//
//==== START Content Bar Block ====//
//=================================//

#content-bar-left, #content-bar-right {

    > .bar-nav p {
        cursor: pointer;
    }
}

//===============================//
//==== End Content Bar Block ====//
//===============================//
